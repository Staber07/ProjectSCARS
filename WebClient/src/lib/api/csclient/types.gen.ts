// This file is auto-generated by @hey-api/openapi-ts

/**
 * AnnouncementRecipients
 */
export type AnnouncementRecipients = 'all' | 'role' | 'school' | 'users';

/**
 * AttachmentMetadataResponse
 * Response model for attachment metadata.
 */
export type AttachmentMetadataResponse = {
    /**
     * File Urn
     */
    file_urn: string;
    /**
     * Filename
     */
    filename: string;
    /**
     * File Size
     */
    file_size: number;
    /**
     * File Type
     */
    file_type: string;
};

/**
 * AttachmentUploadResponse
 * Response model for attachment uploads.
 */
export type AttachmentUploadResponse = {
    /**
     * File Urn
     */
    file_urn: string;
    /**
     * Filename
     */
    filename: string;
    /**
     * File Size
     */
    file_size: number;
    /**
     * File Type
     */
    file_type: string;
};

/**
 * Body_patch_school_logo_v1_schools_logo_patch
 */
export type BodyPatchSchoolLogoV1SchoolsLogoPatch = {
    /**
     * Img
     */
    img: Blob | File;
};

/**
 * Body_refresh_access_token_v1_auth_refresh_post
 */
export type BodyRefreshAccessTokenV1AuthRefreshPost = {
    /**
     * Refresh Token
     */
    refresh_token: string;
};

/**
 * Body_request_access_token_v1_auth_login_post
 */
export type BodyRequestAccessTokenV1AuthLoginPost = {
    /**
     * Grant Type
     */
    grant_type?: string | null;
    /**
     * Username
     */
    username: string;
    /**
     * Password
     */
    password: string;
    /**
     * Scope
     */
    scope?: string;
    /**
     * Client Id
     */
    client_id?: string | null;
    /**
     * Client Secret
     */
    client_secret?: string | null;
};

/**
 * Body_update_user_avatar_endpoint_v1_users_avatar_patch
 */
export type BodyUpdateUserAvatarEndpointV1UsersAvatarPatch = {
    /**
     * Img
     */
    img: Blob | File;
};

/**
 * Body_update_user_signature_endpoint_v1_users_signature_patch
 */
export type BodyUpdateUserSignatureEndpointV1UsersSignaturePatch = {
    /**
     * Img
     */
    img: Blob | File;
};

/**
 * Body_upload_attachment_endpoint_v1_reports_attachments_upload_post
 */
export type BodyUploadAttachmentEndpointV1ReportsAttachmentsUploadPost = {
    /**
     * File
     */
    file: Blob | File;
};

/**
 * ConfigUpdateRequest
 * Request model for updating configuration.
 */
export type ConfigUpdateRequest = {
    /**
     * Config
     */
    config: {
        [key: string]: unknown;
    };
};

/**
 * DailyEntryData
 * Model for creating daily sales and purchases entries.
 */
export type DailyEntryData = {
    /**
     * Day
     * Day of the month (1-31)
     */
    day: number;
    /**
     * Sales
     * Total sales for the day
     */
    sales: number;
    /**
     * Purchases
     * Total purchases for the day
     */
    purchases: number;
};

/**
 * DailyFinancialReport
 * A model representing the daily sales and purchases report.
 *
 * Document Name: Financial Report for the Month of [MONTH], [YEAR]
 */
export type DailyFinancialReport = {
    /**
     * Parent
     */
    parent: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus | null;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Notedby
     */
    notedBy?: string | null;
};

/**
 * DailyFinancialReportEntry
 * A model representing an entry in the daily sales and purchases report.
 */
export type DailyFinancialReportEntry = {
    /**
     * Day
     */
    day: number;
    /**
     * Parent
     */
    parent: string;
    /**
     * Sales
     */
    sales: number;
    /**
     * Purchases
     */
    purchases: number;
};

/**
 * HTTPValidationError
 */
export type HttpValidationError = {
    /**
     * Detail
     */
    detail?: Array<ValidationError>;
};

/**
 * JWTToken
 * A model representing an encoded JWT token.
 */
export type JwtToken = {
    /**
     * Uid
     */
    uid: string;
    /**
     * Access Token
     */
    access_token: string;
    /**
     * Refresh Token
     */
    refresh_token?: string | null;
    /**
     * Token Type
     */
    token_type: string;
};

/**
 * LiquidationReportAdministrativeExpenses
 * A model representing the liquidation (Administrative Expenses) reports.
 *
 * Document Name: Liquidation Report > Administrative Expenses
 */
export type LiquidationReportAdministrativeExpenses = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportClinicFund
 * A model representing the liquidation (Clinic Fund) reports.
 *
 * Document Name: Liquidation Report > Clinic Fund
 */
export type LiquidationReportClinicFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportCreateRequest
 * Request model for creating/updating liquidation reports.
 */
export type LiquidationReportCreateRequest = {
    /**
     * Notedby
     */
    notedBy?: string | null;
    /**
     * Preparedby
     */
    preparedBy?: string | null;
    /**
     * Teacherincharge
     */
    teacherInCharge?: string | null;
    /**
     * Memo
     */
    memo?: string | null;
    /**
     * Entries
     */
    entries?: Array<LiquidationReportEntryData>;
    /**
     * Certifiedby
     */
    certifiedBy?: Array<string>;
};

/**
 * LiquidationReportEntryData
 * Data for a liquidation report entry.
 */
export type LiquidationReportEntryData = {
    /**
     * Date
     */
    date: string;
    /**
     * Particulars
     */
    particulars: string;
    /**
     * Receiptnumber
     */
    receiptNumber?: string | null;
    /**
     * Quantity
     */
    quantity?: number | null;
    /**
     * Unit
     */
    unit?: string | null;
    /**
     * Unitprice
     */
    unitPrice?: number | null;
    /**
     * Amount
     */
    amount?: number | null;
    /**
     * Receipt Attachment Urns
     * JSON string containing list of receipt attachment URNs
     */
    receipt_attachment_urns?: string | null;
};

/**
 * LiquidationReportFacultyAndStudentDevFund
 * A model representing the liquidation (Faculty and Student Development Fund) reports.
 */
export type LiquidationReportFacultyAndStudentDevFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportHEFund
 */
export type LiquidationReportHeFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportOperatingExpenses
 * A model representing the liquidation (Operating Expenses) reports.
 *
 * Document Name: Liquidation Report > Operating Expenses
 */
export type LiquidationReportOperatingExpenses = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportResponse
 * Response model for liquidation reports.
 */
export type LiquidationReportResponse = {
    /**
     * Category
     */
    category: string;
    /**
     * Parent
     */
    parent: string;
    /**
     * Reportstatus
     */
    reportStatus?: string | null;
    /**
     * Notedby
     */
    notedBy?: string | null;
    /**
     * Preparedby
     */
    preparedBy?: string | null;
    /**
     * Teacherincharge
     */
    teacherInCharge?: string | null;
    /**
     * Memo
     */
    memo?: string | null;
    /**
     * Entries
     */
    entries?: Array<LiquidationReportEntryData>;
    /**
     * Certifiedby
     */
    certifiedBy?: Array<string>;
    /**
     * Totalamount
     */
    totalAmount?: number;
};

/**
 * LiquidationReportRevolvingFund
 * A model representing the liquidation (Revolving Fund) reports.
 */
export type LiquidationReportRevolvingFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportSchoolOperationFund
 * A model representing the liquidation (School Operation Fund) reports.
 */
export type LiquidationReportSchoolOperationFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * LiquidationReportSupplementaryFeedingFund
 * A model representing the liquidation (Supplementary Feeding Fund) reports.
 */
export type LiquidationReportSupplementaryFeedingFund = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Notedby
     */
    notedBy: string;
    /**
     * Preparedby
     */
    preparedBy: string;
    /**
     * Teacherincharge
     */
    teacherInCharge: string;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Memo
     * Optional memo/notes for the liquidation report.
     */
    memo?: string | null;
};

/**
 * MonthlyReport
 * A model representing a monthly report in the system.
 *
 * Document Names:
 * - Statement of Receipts, Disbursements, and Utilization of Income (School Canteen)
 * - Monthly Summarized Canteen Report for SY [YEAR-YEAR]
 */
export type MonthlyReport = {
    /**
     * Id
     * The month and year of the report.
     */
    id: string;
    /**
     * Name
     * The name of the report.
     */
    name?: string | null;
    /**
     * Submittedbyschool
     * The school that submitted the report.
     */
    submittedBySchool: number;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
    /**
     * Preparedby
     * The user who prepared the report.
     */
    preparedBy: string | null;
    /**
     * Notedby
     * The user who noted the report.
     */
    notedBy?: string | null;
    /**
     * Datecreated
     * The date and time when the report was created.
     */
    dateCreated?: string;
    /**
     * Dateapproved
     * The date and time when the report was approved.
     */
    dateApproved?: string | null;
    /**
     * Datereceived
     * The date and time when the report was received.
     */
    dateReceived?: string | null;
    /**
     * Lastmodified
     * The last time the report was modified.
     */
    lastModified?: string;
    /**
     * Receivedbydailyfinancialreport
     */
    receivedByDailyFinancialReport?: string | null;
    /**
     * Receivedbyoperatingexpensesreport
     */
    receivedByOperatingExpensesReport?: string | null;
    /**
     * Receivedbyadministrativeexpensesreport
     */
    receivedByAdministrativeExpensesReport?: string | null;
    /**
     * Receivedbyclinicfundreport
     */
    receivedByClinicFundReport?: string | null;
    /**
     * Receivedbysupplementaryfeedingfundreport
     */
    receivedBySupplementaryFeedingFundReport?: string | null;
    /**
     * Receivedbyhefundreport
     */
    receivedByHEFundReport?: string | null;
    /**
     * Receivedbyfacultyandstudentdevfundreport
     */
    receivedByFacultyAndStudentDevFundReport?: string | null;
    /**
     * Receivedbyschooloperationfundreport
     */
    receivedBySchoolOperationFundReport?: string | null;
    /**
     * Receivedbyrevolvingfundreport
     */
    receivedByRevolvingFundReport?: string | null;
};

/**
 * Notification
 * A model representing a notification in the system.
 */
export type Notification = {
    /**
     * Id
     * The unique identifier for the notification.
     */
    id?: string;
    /**
     * Created
     * The timestamp for when the notification was created.
     */
    created?: string;
    /**
     * Ownerid
     * The ID of the user who owns the notification.
     */
    ownerId?: string;
    /**
     * Title
     * The title of the notification.
     */
    title: string;
    /**
     * Content
     * The content of the notification.
     */
    content: string;
    /**
     * Important
     * Indicates whether the notification is important.
     */
    important?: boolean;
    /**
     * The type of the notification. (To be used by the frontend for styling purposes.)
     */
    type?: NotificationType;
    /**
     * Archived
     * Indicates whether the notification has been archived.
     */
    archived?: boolean;
};

/**
 * NotificationArchiveRequest
 * A model representing a request to archive a notification.
 */
export type NotificationArchiveRequest = {
    /**
     * Notification Id
     */
    notification_id: string;
};

/**
 * NotificationType
 * Enumeration for notification types.
 */
export type NotificationType = 'info' | 'warning' | 'error' | 'success' | 'mail' | 'security';

/**
 * OTPRecoveryCode
 * A model representing a request to verify an OTP recovery code.
 */
export type OtpRecoveryCode = {
    /**
     * Recovery Code
     */
    recovery_code: string;
    /**
     * Nonce
     */
    nonce: string;
};

/**
 * OTPToken
 * A model representing a request to create an OTP token.
 */
export type OtpToken = {
    /**
     * Secret
     */
    secret: string;
    /**
     * Recovery Code
     */
    recovery_code: string;
    /**
     * Provisioning Uri
     */
    provisioning_uri: string;
};

/**
 * OTPVerificationToken
 * A model representing a request to verify an OTP token.
 */
export type OtpVerificationToken = {
    /**
     * Otp
     */
    otp: string;
    /**
     * Nonce
     */
    nonce: string;
};

/**
 * PayrollEntryRequest
 * Request model for creating payroll entry data.
 */
export type PayrollEntryRequest = {
    /**
     * Week Number
     */
    week_number: number;
    /**
     * Employee Name
     */
    employee_name: string;
    /**
     * Sun
     */
    sun?: number;
    /**
     * Mon
     */
    mon?: number;
    /**
     * Tue
     */
    tue?: number;
    /**
     * Wed
     */
    wed?: number;
    /**
     * Thu
     */
    thu?: number;
    /**
     * Fri
     */
    fri?: number;
    /**
     * Sat
     */
    sat?: number;
    /**
     * Signature
     */
    signature?: string | null;
};

/**
 * PayrollEntryUpdateRequest
 * Request model for updating specific fields in a payroll entry.
 */
export type PayrollEntryUpdateRequest = {
    /**
     * Sun
     */
    sun?: number | null;
    /**
     * Mon
     */
    mon?: number | null;
    /**
     * Tue
     */
    tue?: number | null;
    /**
     * Wed
     */
    wed?: number | null;
    /**
     * Thu
     */
    thu?: number | null;
    /**
     * Fri
     */
    fri?: number | null;
    /**
     * Sat
     */
    sat?: number | null;
    /**
     * Signature
     */
    signature?: string | null;
};

/**
 * PayrollReport
 * A model representing the monthly payroll report.
 */
export type PayrollReport = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Preparedby
     * The user who prepared the report.
     */
    preparedBy: string;
    /**
     * Notedby
     */
    notedBy: string | null;
    /**
     * The status of the report.
     */
    reportStatus?: ReportStatus;
};

/**
 * PayrollReportEntry
 * A model representing an entry in the payroll report for a week.
 */
export type PayrollReportEntry = {
    /**
     * Parent
     */
    parent: string;
    /**
     * Weeknumber
     * Week number in the month
     */
    weekNumber: number;
    /**
     * Employeename
     * Name of the employee
     */
    employeeName: string;
    /**
     * Sun
     * Amount received on Sunday
     */
    sun?: number;
    /**
     * Mon
     * Amount received on Monday
     */
    mon?: number;
    /**
     * Tue
     * Amount received on Tuesday
     */
    tue?: number;
    /**
     * Wed
     * Amount received on Wednesday
     */
    wed?: number;
    /**
     * Thu
     * Amount received on Thursday
     */
    thu?: number;
    /**
     * Fri
     * Amount received on Friday
     */
    fri?: number;
    /**
     * Sat
     * Amount received on Saturday
     */
    sat?: number;
    /**
     * Signature
     * Signature or reference attachments for the entry
     */
    signature?: string | null;
    /**
     * Receipt Attachment Urns
     * JSON string containing list of receipt attachment URNs
     */
    receipt_attachment_urns?: string | null;
};

/**
 * PayrollReportUpdateRequest
 * Request model for updating payroll report metadata.
 */
export type PayrollReportUpdateRequest = {
    /**
     * Prepared By
     */
    prepared_by?: string | null;
    /**
     * Noted By
     */
    noted_by?: string | null;
};

/**
 * ReportStatus
 */
export type ReportStatus = 'draft' | 'review' | 'approved' | 'rejected' | 'received' | 'archived';

/**
 * Role
 * A model representing user roles in the system.
 */
export type Role = {
    /**
     * Id
     */
    id?: number | null;
    /**
     * Description
     * WebAdmin, Canteen Manager, Principal, Administrator, or Superintendent
     */
    description: string;
    /**
     * Modifiable
     * Whether the role's characteristics can be modified.
     */
    modifiable?: boolean;
};

/**
 * School
 * A model representing schools in the system.
 */
export type School = {
    /**
     * Id
     * The unique identifier for the school.
     */
    id?: number | null;
    /**
     * Name
     * The name of the school.
     */
    name: string;
    /**
     * Address
     * The address of the school.
     */
    address?: string | null;
    /**
     * Phone
     * The phone number of the school.
     */
    phone?: string | null;
    /**
     * Email
     * The email address of the school.
     */
    email?: string | null;
    /**
     * Website
     * The website of the school.
     */
    website?: string | null;
    /**
     * Logourn
     * A link or identifier to the schools's logo within the file storage server.
     */
    logoUrn?: string | null;
    /**
     * Deactivated
     * Indicates whether the school is deactivated or not.
     */
    deactivated?: boolean;
    /**
     * Assignednotedby
     * The user that should approve the school reports.
     */
    assignedNotedBy?: string | null;
    /**
     * Datecreated
     * The timestamp when the record was created.
     */
    dateCreated?: string;
    /**
     * Lastmodified
     * The last time the user information was modified.
     */
    lastModified?: string;
};

/**
 * SchoolCreate
 * A model for creating a new school.
 */
export type SchoolCreate = {
    /**
     * Name
     */
    name: string;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Website
     */
    website?: string | null;
    /**
     * Assignednotedby
     */
    assignedNotedBy?: string | null;
};

/**
 * SchoolDelete
 * A model for deleting a school.
 */
export type SchoolDelete = {
    /**
     * Id
     */
    id: number;
    /**
     * Address
     */
    address?: boolean;
    /**
     * Phone
     */
    phone?: boolean;
    /**
     * Email
     */
    email?: boolean;
    /**
     * Website
     */
    website?: boolean;
};

/**
 * SchoolUpdate
 * A model for updating school information.
 */
export type SchoolUpdate = {
    /**
     * Id
     */
    id: number;
    /**
     * Name
     */
    name: string;
    /**
     * Address
     */
    address?: string | null;
    /**
     * Phone
     */
    phone?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Website
     */
    website?: string | null;
    /**
     * Deactivated
     */
    deactivated?: boolean | null;
    /**
     * Assignednotedby
     */
    assignedNotedBy?: string | null;
};

/**
 * StatusChangeRequest
 * Request model for changing report status.
 */
export type StatusChangeRequest = {
    /**
     * The new status to set for the report
     */
    new_status: ReportStatus;
    /**
     * Comments
     * Optional comments about the status change
     */
    comments?: string | null;
};

/**
 * UserCreate
 * A model used for creating new user accounts.
 */
export type UserCreate = {
    /**
     * Username
     */
    username: string;
    /**
     * Roleid
     */
    roleId: number;
    /**
     * Password
     */
    password: string;
};

/**
 * UserDelete
 * A model used for deleting user's information.
 */
export type UserDelete = {
    /**
     * Id
     */
    id: string;
    /**
     * Email
     */
    email?: boolean;
    /**
     * Namefirst
     */
    nameFirst?: boolean;
    /**
     * Namemiddle
     */
    nameMiddle?: boolean;
    /**
     * Namelast
     */
    nameLast?: boolean;
    /**
     * Position
     */
    position?: boolean;
    /**
     * Schoolid
     */
    schoolId?: boolean;
};

/**
 * UserInvite
 * A model used for inviting a new user to the system.
 */
export type UserInvite = {
    /**
     * Email
     */
    email: string;
    /**
     * Username
     */
    username: string;
    /**
     * Roleid
     */
    roleId: number;
    /**
     * Namefirst
     */
    nameFirst?: string | null;
    /**
     * Namemiddle
     */
    nameMiddle?: string | null;
    /**
     * Namelast
     */
    nameLast?: string | null;
    /**
     * Position
     */
    position?: string | null;
    /**
     * Schoolid
     */
    schoolId?: number | null;
};

/**
 * UserPasswordChange
 * A model used for changing a user's password with current password validation.
 */
export type UserPasswordChange = {
    /**
     * Current Password
     */
    current_password: string;
    /**
     * New Password
     */
    new_password: string;
};

/**
 * UserPasswordResetRequest
 * A model used for resetting a user's password.
 */
export type UserPasswordResetRequest = {
    /**
     * New Password
     */
    new_password: string;
    /**
     * Recovery Token
     */
    recovery_token: string;
};

/**
 * UserPublic
 * A model representing a user without sensitive information.
 */
export type UserPublic = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username: string;
    /**
     * Email
     */
    email: string | null;
    /**
     * Namefirst
     */
    nameFirst: string | null;
    /**
     * Namemiddle
     */
    nameMiddle: string | null;
    /**
     * Namelast
     */
    nameLast: string | null;
    /**
     * Position
     */
    position: string | null;
    /**
     * Avatarurn
     */
    avatarUrn: string | null;
    /**
     * Signatureurn
     */
    signatureUrn: string | null;
    /**
     * Schoolid
     */
    schoolId: number | null;
    /**
     * Roleid
     */
    roleId: number;
    /**
     * Deactivated
     */
    deactivated: boolean;
    /**
     * Finishedtutorials
     */
    finishedTutorials: string;
    /**
     * Otpverified
     */
    otpVerified: boolean;
    /**
     * Oauthlinkedgoogleid
     */
    oauthLinkedGoogleId: string | null;
    /**
     * Oauthlinkedmicrosoftid
     */
    oauthLinkedMicrosoftId: string | null;
    /**
     * Oauthlinkedfacebookid
     */
    oauthLinkedFacebookId: string | null;
    /**
     * Forceupdateinfo
     */
    forceUpdateInfo: boolean;
    /**
     * Emailverified
     */
    emailVerified: boolean;
    /**
     * Datecreated
     */
    dateCreated: string;
    /**
     * Lastmodified
     */
    lastModified: string;
    /**
     * Lastloggedintime
     */
    lastLoggedInTime: string | null;
    /**
     * Lastloggedinip
     */
    lastLoggedInIp: string | null;
};

/**
 * UserSimple
 * A simplified model representing essential user information for reports and signatures.
 */
export type UserSimple = {
    /**
     * Id
     */
    id: string;
    /**
     * Namefirst
     */
    nameFirst: string | null;
    /**
     * Namemiddle
     */
    nameMiddle: string | null;
    /**
     * Namelast
     */
    nameLast: string | null;
    /**
     * Position
     */
    position: string | null;
    /**
     * Avatarurn
     */
    avatarUrn: string | null;
    /**
     * Signatureurn
     */
    signatureUrn: string | null;
};

/**
 * UserUpdate
 * A model used when updating user information.
 */
export type UserUpdate = {
    /**
     * Id
     */
    id: string;
    /**
     * Username
     */
    username?: string | null;
    /**
     * Email
     */
    email?: string | null;
    /**
     * Namefirst
     */
    nameFirst?: string | null;
    /**
     * Namemiddle
     */
    nameMiddle?: string | null;
    /**
     * Namelast
     */
    nameLast?: string | null;
    /**
     * Position
     */
    position?: string | null;
    /**
     * Schoolid
     */
    schoolId?: number | null;
    /**
     * Roleid
     */
    roleId?: number | null;
    /**
     * Deactivated
     */
    deactivated?: boolean | null;
    /**
     * Finishedtutorials
     */
    finishedTutorials?: string | null;
    /**
     * Forceupdateinfo
     */
    forceUpdateInfo?: boolean | null;
    /**
     * Password
     */
    password?: string | null;
};

/**
 * ValidationError
 */
export type ValidationError = {
    /**
     * Location
     */
    loc: Array<string | number>;
    /**
     * Message
     */
    msg: string;
    /**
     * Error Type
     */
    type: string;
};

export type RequestVerificationEmailV1AuthEmailRequestPostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/email/request';
};

export type RequestVerificationEmailV1AuthEmailRequestPostResponses = {
    /**
     * Response Request Verification Email V1 Auth Email Request Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type RequestVerificationEmailV1AuthEmailRequestPostResponse = RequestVerificationEmailV1AuthEmailRequestPostResponses[keyof RequestVerificationEmailV1AuthEmailRequestPostResponses];

export type VerifyEmailV1AuthEmailVerifyPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Token
         */
        token: string;
    };
    url: '/v1/auth/email/verify';
};

export type VerifyEmailV1AuthEmailVerifyPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyEmailV1AuthEmailVerifyPostError = VerifyEmailV1AuthEmailVerifyPostErrors[keyof VerifyEmailV1AuthEmailVerifyPostErrors];

export type VerifyEmailV1AuthEmailVerifyPostResponses = {
    /**
     * Response Verify Email V1 Auth Email Verify Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type VerifyEmailV1AuthEmailVerifyPostResponse = VerifyEmailV1AuthEmailVerifyPostResponses[keyof VerifyEmailV1AuthEmailVerifyPostResponses];

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Username
         */
        username: string;
        /**
         * Email
         */
        email: string;
    };
    url: '/v1/auth/email/recovery/request';
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostError = RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors[keyof RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostErrors];

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses = {
    /**
     * Response Request Password Recovery V1 Auth Email Recovery Request Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponse = RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses[keyof RequestPasswordRecoveryV1AuthEmailRecoveryRequestPostResponses];

export type ResetPasswordV1AuthEmailRecoveryResetPostData = {
    body: UserPasswordResetRequest;
    path?: never;
    query?: never;
    url: '/v1/auth/email/recovery/reset';
};

export type ResetPasswordV1AuthEmailRecoveryResetPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ResetPasswordV1AuthEmailRecoveryResetPostError = ResetPasswordV1AuthEmailRecoveryResetPostErrors[keyof ResetPasswordV1AuthEmailRecoveryResetPostErrors];

export type ResetPasswordV1AuthEmailRecoveryResetPostResponses = {
    /**
     * Response Reset Password V1 Auth Email Recovery Reset Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ResetPasswordV1AuthEmailRecoveryResetPostResponse = ResetPasswordV1AuthEmailRecoveryResetPostResponses[keyof ResetPasswordV1AuthEmailRecoveryResetPostResponses];

export type GoogleOauthLoginV1AuthOauthGoogleLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/google/login';
};

export type GoogleOauthLoginV1AuthOauthGoogleLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Code
         */
        code: string;
    };
    url: '/v1/auth/oauth/google/callback';
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetError = GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors[keyof GoogleOauthCallbackV1AuthOauthGoogleCallbackGetErrors];

export type GoogleOauthCallbackV1AuthOauthGoogleCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Code
         */
        code: string;
    };
    url: '/v1/auth/oauth/google/link';
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetError = OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors[keyof OauthLinkGoogleV1AuthOauthGoogleLinkGetErrors];

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses = {
    /**
     * Response Oauth Link Google V1 Auth Oauth Google Link Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type OauthLinkGoogleV1AuthOauthGoogleLinkGetResponse = OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses[keyof OauthLinkGoogleV1AuthOauthGoogleLinkGetResponses];

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/google/unlink';
};

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses = {
    /**
     * Response Oauth Unlink Google V1 Auth Oauth Google Unlink Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponse = OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses[keyof OauthUnlinkGoogleV1AuthOauthGoogleUnlinkGetResponses];

export type MicrosoftOauthLoginV1AuthOauthMicrosoftLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/microsoft/login';
};

export type MicrosoftOauthLoginV1AuthOauthMicrosoftLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type MicrosoftOauthCallbackV1AuthOauthMicrosoftCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/microsoft/callback';
};

export type MicrosoftOauthCallbackV1AuthOauthMicrosoftCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FacebookOauthLoginV1AuthOauthFacebookLoginGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/facebook/login';
};

export type FacebookOauthLoginV1AuthOauthFacebookLoginGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type FacebookOauthCallbackV1AuthOauthFacebookCallbackGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/oauth/facebook/callback';
};

export type FacebookOauthCallbackV1AuthOauthFacebookCallbackGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/generate';
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses = {
    /**
     * Successful Response
     */
    200: OtpToken;
};

export type GenerateMfaOtpV1AuthMfaOtpGeneratePostResponse = GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses[keyof GenerateMfaOtpV1AuthMfaOtpGeneratePostResponses];

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Otp
         */
        otp: string;
    };
    url: '/v1/auth/mfa/otp/verify';
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostError = VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors[keyof VerifyMfaOtpV1AuthMfaOtpVerifyPostErrors];

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses = {
    /**
     * Response Verify Mfa Otp V1 Auth Mfa Otp Verify Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type VerifyMfaOtpV1AuthMfaOtpVerifyPostResponse = VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses[keyof VerifyMfaOtpV1AuthMfaOtpVerifyPostResponses];

export type ValidateMfaOtpV1AuthMfaOtpValidatePostData = {
    body: OtpVerificationToken;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/validate';
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostError = ValidateMfaOtpV1AuthMfaOtpValidatePostErrors[keyof ValidateMfaOtpV1AuthMfaOtpValidatePostErrors];

export type ValidateMfaOtpV1AuthMfaOtpValidatePostResponses = {
    /**
     * Successful Response
     */
    200: JwtToken;
};

export type ValidateMfaOtpV1AuthMfaOtpValidatePostResponse = ValidateMfaOtpV1AuthMfaOtpValidatePostResponses[keyof ValidateMfaOtpV1AuthMfaOtpValidatePostResponses];

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostData = {
    body: OtpRecoveryCode;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/recovery';
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostError = MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors[keyof MfaOtpRecoveryV1AuthMfaOtpRecoveryPostErrors];

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses = {
    /**
     * Successful Response
     */
    200: JwtToken;
};

export type MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponse = MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses[keyof MfaOtpRecoveryV1AuthMfaOtpRecoveryPostResponses];

export type DisableMfaOtpV1AuthMfaOtpDisablePostData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/mfa/otp/disable';
};

export type DisableMfaOtpV1AuthMfaOtpDisablePostResponses = {
    /**
     * Response Disable Mfa Otp V1 Auth Mfa Otp Disable Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DisableMfaOtpV1AuthMfaOtpDisablePostResponse = DisableMfaOtpV1AuthMfaOtpDisablePostResponses[keyof DisableMfaOtpV1AuthMfaOtpDisablePostResponses];

export type CreateNewUserV1AuthCreatePostData = {
    body: UserCreate;
    path?: never;
    query?: never;
    url: '/v1/auth/create';
};

export type CreateNewUserV1AuthCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateNewUserV1AuthCreatePostError = CreateNewUserV1AuthCreatePostErrors[keyof CreateNewUserV1AuthCreatePostErrors];

export type CreateNewUserV1AuthCreatePostResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type CreateNewUserV1AuthCreatePostResponse = CreateNewUserV1AuthCreatePostResponses[keyof CreateNewUserV1AuthCreatePostResponses];

export type RequestAccessTokenV1AuthLoginPostData = {
    body: BodyRequestAccessTokenV1AuthLoginPost;
    path?: never;
    query?: {
        /**
         * Remember Me
         */
        remember_me?: boolean;
    };
    url: '/v1/auth/login';
};

export type RequestAccessTokenV1AuthLoginPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RequestAccessTokenV1AuthLoginPostError = RequestAccessTokenV1AuthLoginPostErrors[keyof RequestAccessTokenV1AuthLoginPostErrors];

export type RequestAccessTokenV1AuthLoginPostResponses = {
    /**
     * Response Request Access Token V1 Auth Login Post
     * Successful Response
     */
    200: JwtToken | {
        [key: string]: string;
    };
};

export type RequestAccessTokenV1AuthLoginPostResponse = RequestAccessTokenV1AuthLoginPostResponses[keyof RequestAccessTokenV1AuthLoginPostResponses];

export type RefreshAccessTokenV1AuthRefreshPostData = {
    body: BodyRefreshAccessTokenV1AuthRefreshPost;
    path?: never;
    query?: never;
    url: '/v1/auth/refresh';
};

export type RefreshAccessTokenV1AuthRefreshPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type RefreshAccessTokenV1AuthRefreshPostError = RefreshAccessTokenV1AuthRefreshPostErrors[keyof RefreshAccessTokenV1AuthRefreshPostErrors];

export type RefreshAccessTokenV1AuthRefreshPostResponses = {
    /**
     * Successful Response
     */
    200: JwtToken;
};

export type RefreshAccessTokenV1AuthRefreshPostResponse = RefreshAccessTokenV1AuthRefreshPostResponses[keyof RefreshAccessTokenV1AuthRefreshPostResponses];

export type InviteUserV1AuthInvitePostData = {
    body: UserInvite;
    path?: never;
    query?: never;
    url: '/v1/auth/invite';
};

export type InviteUserV1AuthInvitePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type InviteUserV1AuthInvitePostError = InviteUserV1AuthInvitePostErrors[keyof InviteUserV1AuthInvitePostErrors];

export type InviteUserV1AuthInvitePostResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type InviteUserV1AuthInvitePostResponse = InviteUserV1AuthInvitePostResponses[keyof InviteUserV1AuthInvitePostResponses];

export type GetAllRolesV1AuthRolesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/roles';
};

export type GetAllRolesV1AuthRolesGetResponses = {
    /**
     * Response Get All Roles V1 Auth Roles Get
     * Successful Response
     */
    200: Array<Role>;
};

export type GetAllRolesV1AuthRolesGetResponse = GetAllRolesV1AuthRolesGetResponses[keyof GetAllRolesV1AuthRolesGetResponses];

export type GetOauthConfigV1AuthConfigOauthGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/auth/config/oauth';
};

export type GetOauthConfigV1AuthConfigOauthGetResponses = {
    /**
     * Response Get Oauth Config V1 Auth Config Oauth Get
     * Successful Response
     */
    200: {
        [key: string]: boolean;
    };
};

export type GetOauthConfigV1AuthConfigOauthGetResponse = GetOauthConfigV1AuthConfigOauthGetResponses[keyof GetOauthConfigV1AuthConfigOauthGetResponses];

export type GetUsersQuantityEndpointV1UsersQuantityGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/quantity';
};

export type GetUsersQuantityEndpointV1UsersQuantityGetResponses = {
    /**
     * Response Get Users Quantity Endpoint V1 Users Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetUsersQuantityEndpointV1UsersQuantityGetResponse = GetUsersQuantityEndpointV1UsersQuantityGetResponses[keyof GetUsersQuantityEndpointV1UsersQuantityGetResponses];

export type GetUserProfileEndpointV1UsersMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/me';
};

export type GetUserProfileEndpointV1UsersMeGetResponses = {
    /**
     * Response Get User Profile Endpoint V1 Users Me Get
     * Successful Response
     */
    200: [
        UserPublic,
        Array<string>
    ];
};

export type GetUserProfileEndpointV1UsersMeGetResponse = GetUserProfileEndpointV1UsersMeGetResponses[keyof GetUserProfileEndpointV1UsersMeGetResponses];

export type GetAllUsersEndpointV1UsersAllGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Show All
         */
        show_all?: boolean;
    };
    url: '/v1/users/all';
};

export type GetAllUsersEndpointV1UsersAllGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllUsersEndpointV1UsersAllGetError = GetAllUsersEndpointV1UsersAllGetErrors[keyof GetAllUsersEndpointV1UsersAllGetErrors];

export type GetAllUsersEndpointV1UsersAllGetResponses = {
    /**
     * Response Get All Users Endpoint V1 Users All Get
     * Successful Response
     */
    200: Array<UserPublic>;
};

export type GetAllUsersEndpointV1UsersAllGetResponse = GetAllUsersEndpointV1UsersAllGetResponses[keyof GetAllUsersEndpointV1UsersAllGetResponses];

export type DeleteUserInfoEndpointV1UsersDeleteData = {
    body: UserDelete;
    path?: never;
    query?: never;
    url: '/v1/users/';
};

export type DeleteUserInfoEndpointV1UsersDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserInfoEndpointV1UsersDeleteError = DeleteUserInfoEndpointV1UsersDeleteErrors[keyof DeleteUserInfoEndpointV1UsersDeleteErrors];

export type DeleteUserInfoEndpointV1UsersDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserEndpointV1UsersGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/';
};

export type GetUserEndpointV1UsersGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserEndpointV1UsersGetError = GetUserEndpointV1UsersGetErrors[keyof GetUserEndpointV1UsersGetErrors];

export type GetUserEndpointV1UsersGetResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type GetUserEndpointV1UsersGetResponse = GetUserEndpointV1UsersGetResponses[keyof GetUserEndpointV1UsersGetResponses];

export type UpdateUserEndpointV1UsersPatchData = {
    body: UserUpdate;
    path?: never;
    query?: never;
    url: '/v1/users/';
};

export type UpdateUserEndpointV1UsersPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserEndpointV1UsersPatchError = UpdateUserEndpointV1UsersPatchErrors[keyof UpdateUserEndpointV1UsersPatchErrors];

export type UpdateUserEndpointV1UsersPatchResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UpdateUserEndpointV1UsersPatchResponse = UpdateUserEndpointV1UsersPatchResponses[keyof UpdateUserEndpointV1UsersPatchResponses];

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/avatar';
};

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteError = DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors[keyof DeleteUserAvatarEndpointV1UsersAvatarDeleteErrors];

export type DeleteUserAvatarEndpointV1UsersAvatarDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserAvatarEndpointV1UsersAvatarGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Fn
         */
        fn: string;
    };
    url: '/v1/users/avatar';
};

export type GetUserAvatarEndpointV1UsersAvatarGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserAvatarEndpointV1UsersAvatarGetError = GetUserAvatarEndpointV1UsersAvatarGetErrors[keyof GetUserAvatarEndpointV1UsersAvatarGetErrors];

export type GetUserAvatarEndpointV1UsersAvatarGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchData = {
    body: BodyUpdateUserAvatarEndpointV1UsersAvatarPatch;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/avatar';
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchError = UpdateUserAvatarEndpointV1UsersAvatarPatchErrors[keyof UpdateUserAvatarEndpointV1UsersAvatarPatchErrors];

export type UpdateUserAvatarEndpointV1UsersAvatarPatchResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UpdateUserAvatarEndpointV1UsersAvatarPatchResponse = UpdateUserAvatarEndpointV1UsersAvatarPatchResponses[keyof UpdateUserAvatarEndpointV1UsersAvatarPatchResponses];

export type DeleteUserSignatureEndpointV1UsersSignatureDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/signature';
};

export type DeleteUserSignatureEndpointV1UsersSignatureDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteUserSignatureEndpointV1UsersSignatureDeleteError = DeleteUserSignatureEndpointV1UsersSignatureDeleteErrors[keyof DeleteUserSignatureEndpointV1UsersSignatureDeleteErrors];

export type DeleteUserSignatureEndpointV1UsersSignatureDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetUserSignatureEndpointV1UsersSignatureGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Fn
         */
        fn: string;
    };
    url: '/v1/users/signature';
};

export type GetUserSignatureEndpointV1UsersSignatureGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserSignatureEndpointV1UsersSignatureGetError = GetUserSignatureEndpointV1UsersSignatureGetErrors[keyof GetUserSignatureEndpointV1UsersSignatureGetErrors];

export type GetUserSignatureEndpointV1UsersSignatureGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type UpdateUserSignatureEndpointV1UsersSignaturePatchData = {
    body: BodyUpdateUserSignatureEndpointV1UsersSignaturePatch;
    path?: never;
    query: {
        /**
         * User Id
         */
        user_id: string;
    };
    url: '/v1/users/signature';
};

export type UpdateUserSignatureEndpointV1UsersSignaturePatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateUserSignatureEndpointV1UsersSignaturePatchError = UpdateUserSignatureEndpointV1UsersSignaturePatchErrors[keyof UpdateUserSignatureEndpointV1UsersSignaturePatchErrors];

export type UpdateUserSignatureEndpointV1UsersSignaturePatchResponses = {
    /**
     * Successful Response
     */
    200: UserPublic;
};

export type UpdateUserSignatureEndpointV1UsersSignaturePatchResponse = UpdateUserSignatureEndpointV1UsersSignaturePatchResponses[keyof UpdateUserSignatureEndpointV1UsersSignaturePatchResponses];

export type GetUsersSimpleEndpointV1UsersSimpleGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * School Id
         */
        school_id?: number | null;
    };
    url: '/v1/users/simple';
};

export type GetUsersSimpleEndpointV1UsersSimpleGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUsersSimpleEndpointV1UsersSimpleGetError = GetUsersSimpleEndpointV1UsersSimpleGetErrors[keyof GetUsersSimpleEndpointV1UsersSimpleGetErrors];

export type GetUsersSimpleEndpointV1UsersSimpleGetResponses = {
    /**
     * Response Get Users Simple Endpoint V1 Users Simple Get
     * Successful Response
     */
    200: Array<UserSimple>;
};

export type GetUsersSimpleEndpointV1UsersSimpleGetResponse = GetUsersSimpleEndpointV1UsersSimpleGetResponses[keyof GetUsersSimpleEndpointV1UsersSimpleGetResponses];

export type GetUserLastModifiedEndpointV1UsersMeLastModifiedGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/users/me/last-modified';
};

export type GetUserLastModifiedEndpointV1UsersMeLastModifiedGetResponses = {
    /**
     * Response Get User Last Modified Endpoint V1 Users Me Last Modified Get
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type GetUserLastModifiedEndpointV1UsersMeLastModifiedGetResponse = GetUserLastModifiedEndpointV1UsersMeLastModifiedGetResponses[keyof GetUserLastModifiedEndpointV1UsersMeLastModifiedGetResponses];

export type ChangeUserPasswordEndpointV1UsersMePasswordPatchData = {
    body: UserPasswordChange;
    path?: never;
    query?: never;
    url: '/v1/users/me/password';
};

export type ChangeUserPasswordEndpointV1UsersMePasswordPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeUserPasswordEndpointV1UsersMePasswordPatchError = ChangeUserPasswordEndpointV1UsersMePasswordPatchErrors[keyof ChangeUserPasswordEndpointV1UsersMePasswordPatchErrors];

export type ChangeUserPasswordEndpointV1UsersMePasswordPatchResponses = {
    /**
     * Response Change User Password Endpoint V1 Users Me Password Patch
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type ChangeUserPasswordEndpointV1UsersMePasswordPatchResponse = ChangeUserPasswordEndpointV1UsersMePasswordPatchResponses[keyof ChangeUserPasswordEndpointV1UsersMePasswordPatchResponses];

export type CreateSchoolEndpointV1SchoolsCreatePostData = {
    body: SchoolCreate;
    path?: never;
    query?: never;
    url: '/v1/schools/create';
};

export type CreateSchoolEndpointV1SchoolsCreatePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolEndpointV1SchoolsCreatePostError = CreateSchoolEndpointV1SchoolsCreatePostErrors[keyof CreateSchoolEndpointV1SchoolsCreatePostErrors];

export type CreateSchoolEndpointV1SchoolsCreatePostResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type CreateSchoolEndpointV1SchoolsCreatePostResponse = CreateSchoolEndpointV1SchoolsCreatePostResponses[keyof CreateSchoolEndpointV1SchoolsCreatePostResponses];

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/schools/quantity';
};

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses = {
    /**
     * Response Get Schools Quantity Endpoint V1 Schools Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponse = GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses[keyof GetSchoolsQuantityEndpointV1SchoolsQuantityGetResponses];

export type GetAssignedSchoolsEndpointV1SchoolsMeGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/schools/me';
};

export type GetAssignedSchoolsEndpointV1SchoolsMeGetResponses = {
    /**
     * Response Get Assigned Schools Endpoint V1 Schools Me Get
     * Successful Response
     */
    200: School | null;
};

export type GetAssignedSchoolsEndpointV1SchoolsMeGetResponse = GetAssignedSchoolsEndpointV1SchoolsMeGetResponses[keyof GetAssignedSchoolsEndpointV1SchoolsMeGetResponses];

export type GetAllSchoolsEndpointV1SchoolsAllGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Show All
         */
        show_all?: boolean;
    };
    url: '/v1/schools/all';
};

export type GetAllSchoolsEndpointV1SchoolsAllGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllSchoolsEndpointV1SchoolsAllGetError = GetAllSchoolsEndpointV1SchoolsAllGetErrors[keyof GetAllSchoolsEndpointV1SchoolsAllGetErrors];

export type GetAllSchoolsEndpointV1SchoolsAllGetResponses = {
    /**
     * Response Get All Schools Endpoint V1 Schools All Get
     * Successful Response
     */
    200: Array<School>;
};

export type GetAllSchoolsEndpointV1SchoolsAllGetResponse = GetAllSchoolsEndpointV1SchoolsAllGetResponses[keyof GetAllSchoolsEndpointV1SchoolsAllGetResponses];

export type DeleteSchoolInfoEndpointV1SchoolsDeleteData = {
    body: SchoolDelete;
    path?: never;
    query?: never;
    url: '/v1/schools/';
};

export type DeleteSchoolInfoEndpointV1SchoolsDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolInfoEndpointV1SchoolsDeleteError = DeleteSchoolInfoEndpointV1SchoolsDeleteErrors[keyof DeleteSchoolInfoEndpointV1SchoolsDeleteErrors];

export type DeleteSchoolInfoEndpointV1SchoolsDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSchoolEndpointV1SchoolsGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/';
};

export type GetSchoolEndpointV1SchoolsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolEndpointV1SchoolsGetError = GetSchoolEndpointV1SchoolsGetErrors[keyof GetSchoolEndpointV1SchoolsGetErrors];

export type GetSchoolEndpointV1SchoolsGetResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type GetSchoolEndpointV1SchoolsGetResponse = GetSchoolEndpointV1SchoolsGetResponses[keyof GetSchoolEndpointV1SchoolsGetResponses];

export type UpdateSchoolEndpointV1SchoolsPatchData = {
    body: SchoolUpdate;
    path?: never;
    query?: never;
    url: '/v1/schools/';
};

export type UpdateSchoolEndpointV1SchoolsPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSchoolEndpointV1SchoolsPatchError = UpdateSchoolEndpointV1SchoolsPatchErrors[keyof UpdateSchoolEndpointV1SchoolsPatchErrors];

export type UpdateSchoolEndpointV1SchoolsPatchResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type UpdateSchoolEndpointV1SchoolsPatchResponse = UpdateSchoolEndpointV1SchoolsPatchResponses[keyof UpdateSchoolEndpointV1SchoolsPatchResponses];

export type DeleteSchoolLogoV1SchoolsLogoDeleteData = {
    body?: never;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/logo';
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteError = DeleteSchoolLogoV1SchoolsLogoDeleteErrors[keyof DeleteSchoolLogoV1SchoolsLogoDeleteErrors];

export type DeleteSchoolLogoV1SchoolsLogoDeleteResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type DeleteSchoolLogoV1SchoolsLogoDeleteResponse = DeleteSchoolLogoV1SchoolsLogoDeleteResponses[keyof DeleteSchoolLogoV1SchoolsLogoDeleteResponses];

export type GetSchoolLogoEndpointV1SchoolsLogoGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Fn
         */
        fn: string;
    };
    url: '/v1/schools/logo';
};

export type GetSchoolLogoEndpointV1SchoolsLogoGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolLogoEndpointV1SchoolsLogoGetError = GetSchoolLogoEndpointV1SchoolsLogoGetErrors[keyof GetSchoolLogoEndpointV1SchoolsLogoGetErrors];

export type GetSchoolLogoEndpointV1SchoolsLogoGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type PatchSchoolLogoV1SchoolsLogoPatchData = {
    body: BodyPatchSchoolLogoV1SchoolsLogoPatch;
    path?: never;
    query: {
        /**
         * School Id
         */
        school_id: number;
    };
    url: '/v1/schools/logo';
};

export type PatchSchoolLogoV1SchoolsLogoPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type PatchSchoolLogoV1SchoolsLogoPatchError = PatchSchoolLogoV1SchoolsLogoPatchErrors[keyof PatchSchoolLogoV1SchoolsLogoPatchErrors];

export type PatchSchoolLogoV1SchoolsLogoPatchResponses = {
    /**
     * Successful Response
     */
    200: School;
};

export type PatchSchoolLogoV1SchoolsLogoPatchResponse = PatchSchoolLogoV1SchoolsLogoPatchResponses[keyof PatchSchoolLogoV1SchoolsLogoPatchResponses];

export type GetNotificationQuantityV1NotificationsQuantityGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Show Archived
         */
        show_archived?: boolean;
    };
    url: '/v1/notifications/quantity';
};

export type GetNotificationQuantityV1NotificationsQuantityGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNotificationQuantityV1NotificationsQuantityGetError = GetNotificationQuantityV1NotificationsQuantityGetErrors[keyof GetNotificationQuantityV1NotificationsQuantityGetErrors];

export type GetNotificationQuantityV1NotificationsQuantityGetResponses = {
    /**
     * Response Get Notification Quantity V1 Notifications Quantity Get
     * Successful Response
     */
    200: number;
};

export type GetNotificationQuantityV1NotificationsQuantityGetResponse = GetNotificationQuantityV1NotificationsQuantityGetResponses[keyof GetNotificationQuantityV1NotificationsQuantityGetResponses];

export type GetNotificationV1NotificationsGetData = {
    body?: never;
    path?: never;
    query: {
        /**
         * Notification Id
         */
        notification_id: string;
    };
    url: '/v1/notifications/';
};

export type GetNotificationV1NotificationsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetNotificationV1NotificationsGetError = GetNotificationV1NotificationsGetErrors[keyof GetNotificationV1NotificationsGetErrors];

export type GetNotificationV1NotificationsGetResponses = {
    /**
     * Successful Response
     */
    200: Notification;
};

export type GetNotificationV1NotificationsGetResponse = GetNotificationV1NotificationsGetResponses[keyof GetNotificationV1NotificationsGetResponses];

export type ArchiveNotificationV1NotificationsPostData = {
    body: NotificationArchiveRequest;
    path?: never;
    query?: {
        /**
         * Unarchive
         */
        unarchive?: boolean;
    };
    url: '/v1/notifications/';
};

export type ArchiveNotificationV1NotificationsPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ArchiveNotificationV1NotificationsPostError = ArchiveNotificationV1NotificationsPostErrors[keyof ArchiveNotificationV1NotificationsPostErrors];

export type ArchiveNotificationV1NotificationsPostResponses = {
    /**
     * Successful Response
     */
    200: Notification;
};

export type ArchiveNotificationV1NotificationsPostResponse = ArchiveNotificationV1NotificationsPostResponses[keyof ArchiveNotificationV1NotificationsPostResponses];

export type GetUserNotificationsV1NotificationsMeGetData = {
    body?: never;
    path?: never;
    query?: {
        /**
         * Unarchived Only
         */
        unarchived_only?: boolean;
        /**
         * Important Only
         */
        important_only?: boolean;
        /**
         * Offset
         */
        offset?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/v1/notifications/me';
};

export type GetUserNotificationsV1NotificationsMeGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetUserNotificationsV1NotificationsMeGetError = GetUserNotificationsV1NotificationsMeGetErrors[keyof GetUserNotificationsV1NotificationsMeGetErrors];

export type GetUserNotificationsV1NotificationsMeGetResponses = {
    /**
     * Response Get User Notifications V1 Notifications Me Get
     * Successful Response
     */
    200: Array<Notification>;
};

export type GetUserNotificationsV1NotificationsMeGetResponse = GetUserNotificationsV1NotificationsMeGetResponses[keyof GetUserNotificationsV1NotificationsMeGetResponses];

export type AnnounceNotificationV1NotificationsAnnouncePostData = {
    /**
     * Recipient Ids
     */
    body?: Array<string> | null;
    path?: never;
    query: {
        /**
         * Title
         */
        title: string;
        /**
         * Content
         */
        content: string;
        recipient_types: AnnouncementRecipients;
        /**
         * Important
         */
        important?: boolean;
        /**
         * Recipient Role Id
         */
        recipient_role_id?: number | null;
        /**
         * Recipient School Id
         */
        recipient_school_id?: number | null;
        notification_type?: NotificationType;
    };
    url: '/v1/notifications/announce';
};

export type AnnounceNotificationV1NotificationsAnnouncePostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type AnnounceNotificationV1NotificationsAnnouncePostError = AnnounceNotificationV1NotificationsAnnouncePostErrors[keyof AnnounceNotificationV1NotificationsAnnouncePostErrors];

export type AnnounceNotificationV1NotificationsAnnouncePostResponses = {
    /**
     * Response Announce Notification V1 Notifications Announce Post
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type AnnounceNotificationV1NotificationsAnnouncePostResponse = AnnounceNotificationV1NotificationsAnnouncePostResponses[keyof AnnounceNotificationV1NotificationsAnnouncePostResponses];

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
    };
    query?: {
        /**
         * Limit
         */
        limit?: number;
        /**
         * Offset
         */
        offset?: number;
    };
    url: '/v1/reports/monthly/{school_id}';
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetError = GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors[keyof GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetErrors];

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses = {
    /**
     * Response Get All School Monthly Reports V1 Reports Monthly  School Id  Get
     * Successful Response
     */
    200: Array<MonthlyReport>;
};

export type GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponse = GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses[keyof GetAllSchoolMonthlyReportsV1ReportsMonthlySchoolIdGetResponses];

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteError = DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors[keyof DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteErrors];

export type DeleteSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetError = GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors[keyof GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetErrors];

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses = {
    /**
     * Response Get School Monthly Report V1 Reports Monthly  School Id   Year   Month  Get
     * Successful Response
     */
    200: MonthlyReport | null;
};

export type GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponse = GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses[keyof GetSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthGetResponses];

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Noted By
         */
        noted_by?: string | null;
    };
    url: '/v1/reports/monthly/{school_id}/{year}/{month}';
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchError = CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors[keyof CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchErrors];

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses = {
    /**
     * Successful Response
     */
    200: MonthlyReport;
};

export type CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponse = CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses[keyof CreateSchoolMonthlyReportV1ReportsMonthlySchoolIdYearMonthPatchResponses];

export type ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchData = {
    body: StatusChangeRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}/status';
};

export type ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchError = ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchErrors[keyof ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchErrors];

export type ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: MonthlyReport;
};

export type ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchResponse = ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchResponses[keyof ChangeMonthlyReportStatusV1ReportsMonthlySchoolIdYearMonthStatusPatchResponses];

export type GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/monthly/{school_id}/{year}/{month}/valid-transitions';
};

export type GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetError = GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetErrors[keyof GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetErrors];

export type GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetResponses = {
    /**
     * Response Get Valid Status Transitions V1 Reports Monthly  School Id   Year   Month  Valid Transitions Get
     * Successful Response
     */
    200: {
        [key: string]: string | Array<string>;
    };
};

export type GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetResponse = GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetResponses[keyof GetValidStatusTransitionsV1ReportsMonthlySchoolIdYearMonthValidTransitionsGetResponses];

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteError = DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors[keyof DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteErrors];

export type DeleteSchoolDailyReportV1ReportsDailySchoolIdYearMonthDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetError = GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetErrors[keyof GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetErrors];

export type GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetResponse = GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetResponses[keyof GetSchoolDailyReportV1ReportsDailySchoolIdYearMonthGetResponses];

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Noted By
         */
        noted_by?: string | null;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchError = CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors[keyof CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchErrors];

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponse = CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses[keyof CreateSchoolDailyReportV1ReportsDailySchoolIdYearMonthPatchResponses];

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}';
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutError = CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors[keyof CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutErrors];

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponse = CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses[keyof CreateSchoolDailyFinancialReportV1ReportsDailySchoolIdYearMonthPutResponses];

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries';
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetError = GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors[keyof GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetErrors];

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses = {
    /**
     * Response Get School Daily Report Entries V1 Reports Daily  School Id   Year   Month  Entries Get
     * Successful Response
     */
    200: Array<DailyFinancialReportEntry>;
};

export type GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponse = GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses[keyof GetSchoolDailyReportEntriesV1ReportsDailySchoolIdYearMonthEntriesGetResponses];

export type CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query: {
        /**
         * Day
         */
        day: number;
        /**
         * Sales
         */
        sales: number;
        /**
         * Purchases
         */
        purchases: number;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries';
};

export type CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostError = CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostErrors[keyof CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostErrors];

export type CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReportEntry;
};

export type CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostResponse = CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostResponses[keyof CreateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesPostResponses];

export type DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Day
         */
        day: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries/{day}';
};

export type DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteError = DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteErrors[keyof DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteErrors];

export type DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteResponses = {
    /**
     * Response Delete Daily Sales And Purchases Entry V1 Reports Daily  School Id   Year   Month  Entries  Day  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteResponse = DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteResponses[keyof DeleteDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayDeleteResponses];

export type GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Day
         */
        day: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries/{day}';
};

export type GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetError = GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetErrors[keyof GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetErrors];

export type GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReportEntry;
};

export type GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetResponse = GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetResponses[keyof GetDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayGetResponses];

export type UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Day
         */
        day: number;
    };
    query: {
        /**
         * Sales
         */
        sales: number;
        /**
         * Purchases
         */
        purchases: number;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries/{day}';
};

export type UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchError = UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchErrors[keyof UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchErrors];

export type UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchResponse = UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchResponses[keyof UpdateSchoolDailyReportEntryLegacyV1ReportsDailySchoolIdYearMonthEntriesDayPatchResponses];

export type UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Day
         */
        day: number;
    };
    query: {
        /**
         * Sales
         */
        sales: number;
        /**
         * Purchases
         */
        purchases: number;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries/{day}';
};

export type UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutError = UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutErrors[keyof UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutErrors];

export type UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReportEntry;
};

export type UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutResponse = UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutResponses[keyof UpdateDailySalesAndPurchasesEntryV1ReportsDailySchoolIdYearMonthEntriesDayPutResponses];

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
    };
    query?: {
        /**
         * Offset
         */
        offset?: number;
        /**
         * Limit
         */
        limit?: number;
    };
    url: '/v1/reports/daily/{school_id}';
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetError = GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors[keyof GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetErrors];

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses = {
    /**
     * Response Get School Daily Financial Reports V1 Reports Daily  School Id  Get
     * Successful Response
     */
    200: Array<DailyFinancialReport>;
};

export type GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponse = GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses[keyof GetSchoolDailyFinancialReportsV1ReportsDailySchoolIdGetResponses];

export type GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/full';
};

export type GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetError = GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetErrors[keyof GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetErrors];

export type GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetResponses = {
    /**
     * Response Get School Daily Financial Report With Entries V1 Reports Daily  School Id   Year   Month  Full Get
     * Successful Response
     */
    200: [
        DailyFinancialReport,
        Array<DailyFinancialReportEntry>
    ];
};

export type GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetResponse = GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetResponses[keyof GetSchoolDailyFinancialReportWithEntriesV1ReportsDailySchoolIdYearMonthFullGetResponses];

export type CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostData = {
    /**
     * Entries
     */
    body: Array<DailyEntryData>;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/entries/bulk';
};

export type CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostError = CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostErrors[keyof CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostErrors];

export type CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostResponses = {
    /**
     * Response Create Bulk Daily Sales And Purchases Entries V1 Reports Daily  School Id   Year   Month  Entries Bulk Post
     * Successful Response
     */
    200: Array<DailyFinancialReportEntry>;
};

export type CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostResponse = CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostResponses[keyof CreateBulkDailySalesAndPurchasesEntriesV1ReportsDailySchoolIdYearMonthEntriesBulkPostResponses];

export type GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/summary';
};

export type GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetError = GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetErrors[keyof GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetErrors];

export type GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetResponses = {
    /**
     * Response Get Daily Sales And Purchases Summary V1 Reports Daily  School Id   Year   Month  Summary Get
     * Successful Response
     */
    200: {
        [key: string]: number | number | {
            [key: string]: number | number;
        } | null;
    };
};

export type GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetResponse = GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetResponses[keyof GetDailySalesAndPurchasesSummaryV1ReportsDailySchoolIdYearMonthSummaryGetResponses];

export type GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Include Drafts
         */
        include_drafts?: boolean;
        /**
         * Include Reviews
         */
        include_reviews?: boolean;
        /**
         * Include Approved
         */
        include_approved?: boolean;
        /**
         * Include Rejected
         */
        include_rejected?: boolean;
        /**
         * Include Received
         */
        include_received?: boolean;
        /**
         * Include Archived
         */
        include_archived?: boolean;
    };
    url: '/v1/reports/daily/{school_id}/{year}/{month}/summary/filtered';
};

export type GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetError = GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetErrors[keyof GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetErrors];

export type GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetResponses = {
    /**
     * Response Get Daily Sales And Purchases Summary Filtered V1 Reports Daily  School Id   Year   Month  Summary Filtered Get
     * Successful Response
     */
    200: {
        [key: string]: number | number | {
            [key: string]: number | number;
        } | string | null;
    };
};

export type GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetResponse = GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetResponses[keyof GetDailySalesAndPurchasesSummaryFilteredV1ReportsDailySchoolIdYearMonthSummaryFilteredGetResponses];

export type ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchData = {
    body: StatusChangeRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/status';
};

export type ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchError = ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchErrors[keyof ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchErrors];

export type ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: DailyFinancialReport;
};

export type ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchResponse = ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchResponses[keyof ChangeDailyReportStatusV1ReportsDailySchoolIdYearMonthStatusPatchResponses];

export type GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/daily/{school_id}/{year}/{month}/valid-transitions';
};

export type GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetError = GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetErrors[keyof GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetErrors];

export type GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetResponses = {
    /**
     * Response Get Daily Valid Status Transitions V1 Reports Daily  School Id   Year   Month  Valid Transitions Get
     * Successful Response
     */
    200: {
        [key: string]: string | Array<string>;
    };
};

export type GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetResponse = GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetResponses[keyof GetDailyValidStatusTransitionsV1ReportsDailySchoolIdYearMonthValidTransitionsGetResponses];

export type DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}';
};

export type DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteError = DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteErrors[keyof DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteErrors];

export type DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteResponses = {
    /**
     * Response Delete School Payroll Report V1 Reports Payroll  School Id   Year   Month  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteResponse = DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteResponses[keyof DeleteSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthDeleteResponses];

export type GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}';
};

export type GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetError = GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetErrors[keyof GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetErrors];

export type GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetResponses = {
    /**
     * Successful Response
     */
    200: PayrollReport;
};

export type GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetResponse = GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetResponses[keyof GetSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthGetResponses];

export type CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: {
        /**
         * Noted By
         */
        noted_by?: string | null;
    };
    url: '/v1/reports/payroll/{school_id}/{year}/{month}';
};

export type CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchError = CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchErrors[keyof CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchErrors];

export type CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchResponses = {
    /**
     * Successful Response
     */
    200: PayrollReport;
};

export type CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchResponse = CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchResponses[keyof CreateSchoolPayrollReportV1ReportsPayrollSchoolIdYearMonthPatchResponses];

export type UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutData = {
    body: PayrollReportUpdateRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}';
};

export type UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutError = UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutErrors[keyof UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutErrors];

export type UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutResponses = {
    /**
     * Successful Response
     */
    200: PayrollReport;
};

export type UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutResponse = UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutResponses[keyof UpdatePayrollReportV1ReportsPayrollSchoolIdYearMonthPutResponses];

export type GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/entries';
};

export type GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetError = GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetErrors[keyof GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetErrors];

export type GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetResponses = {
    /**
     * Response Get School Payroll Report Entries V1 Reports Payroll  School Id   Year   Month  Entries Get
     * Successful Response
     */
    200: Array<PayrollReportEntry>;
};

export type GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetResponse = GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetResponses[keyof GetSchoolPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesGetResponses];

export type CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostData = {
    body: PayrollEntryRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/entries';
};

export type CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostError = CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostErrors[keyof CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostErrors];

export type CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostResponses = {
    /**
     * Successful Response
     */
    200: PayrollReportEntry;
};

export type CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostResponse = CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostResponses[keyof CreatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesPostResponses];

export type CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostData = {
    /**
     * Entries
     */
    body: Array<PayrollEntryRequest>;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/entries/bulk';
};

export type CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostError = CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostErrors[keyof CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostErrors];

export type CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostResponses = {
    /**
     * Response Create Bulk Payroll Report Entries V1 Reports Payroll  School Id   Year   Month  Entries Bulk Post
     * Successful Response
     */
    200: Array<PayrollReportEntry>;
};

export type CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostResponse = CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostResponses[keyof CreateBulkPayrollReportEntriesV1ReportsPayrollSchoolIdYearMonthEntriesBulkPostResponses];

export type DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Week Number
         */
        week_number: number;
        /**
         * Employee Name
         */
        employee_name: string;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/entries/{week_number}/{employee_name}';
};

export type DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteError = DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteErrors[keyof DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteErrors];

export type DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteResponses = {
    /**
     * Response Delete Payroll Report Entry V1 Reports Payroll  School Id   Year   Month  Entries  Week Number   Employee Name  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteResponse = DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteResponses[keyof DeletePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNameDeleteResponses];

export type UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutData = {
    body: PayrollEntryUpdateRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Week Number
         */
        week_number: number;
        /**
         * Employee Name
         */
        employee_name: string;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/entries/{week_number}/{employee_name}';
};

export type UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutError = UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutErrors[keyof UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutErrors];

export type UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutResponses = {
    /**
     * Successful Response
     */
    200: PayrollReportEntry;
};

export type UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutResponse = UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutResponses[keyof UpdatePayrollReportEntryV1ReportsPayrollSchoolIdYearMonthEntriesWeekNumberEmployeeNamePutResponses];

export type ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchData = {
    body: StatusChangeRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/status';
};

export type ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchError = ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchErrors[keyof ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchErrors];

export type ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchResponses = {
    /**
     * Successful Response
     */
    200: PayrollReport;
};

export type ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchResponse = ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchResponses[keyof ChangePayrollReportStatusV1ReportsPayrollSchoolIdYearMonthStatusPatchResponses];

export type GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
    };
    query?: never;
    url: '/v1/reports/payroll/{school_id}/{year}/{month}/valid-transitions';
};

export type GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetError = GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetErrors[keyof GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetErrors];

export type GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetResponses = {
    /**
     * Response Get Payroll Valid Status Transitions V1 Reports Payroll  School Id   Year   Month  Valid Transitions Get
     * Successful Response
     */
    200: {
        [key: string]: string | Array<string>;
    };
};

export type GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetResponse = GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetResponses[keyof GetPayrollValidStatusTransitionsV1ReportsPayrollSchoolIdYearMonthValidTransitionsGetResponses];

export type DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}';
};

export type DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteError = DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteErrors[keyof DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteErrors];

export type DeleteLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryDeleteResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}';
};

export type GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetError = GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetErrors[keyof GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetErrors];

export type GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetResponses = {
    /**
     * Successful Response
     */
    200: LiquidationReportResponse;
};

export type GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetResponse = GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetResponses[keyof GetLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryGetResponses];

export type CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchData = {
    body: LiquidationReportCreateRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}';
};

export type CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchError = CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchErrors[keyof CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchErrors];

export type CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchResponses = {
    /**
     * Successful Response
     */
    200: LiquidationReportResponse;
};

export type CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchResponse = CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchResponses[keyof CreateOrUpdateLiquidationReportV1ReportsLiquidationSchoolIdYearMonthCategoryPatchResponses];

export type GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}/entries';
};

export type GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetError = GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetErrors[keyof GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetErrors];

export type GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetResponses = {
    /**
     * Response Get Liquidation Report Entries V1 Reports Liquidation  School Id   Year   Month   Category  Entries Get
     * Successful Response
     */
    200: Array<LiquidationReportEntryData>;
};

export type GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetResponse = GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetResponses[keyof GetLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesGetResponses];

export type UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutData = {
    /**
     * Entries
     */
    body: Array<LiquidationReportEntryData>;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}/entries';
};

export type UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutError = UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutErrors[keyof UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutErrors];

export type UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutResponses = {
    /**
     * Response Update Liquidation Report Entries V1 Reports Liquidation  School Id   Year   Month   Category  Entries Put
     * Successful Response
     */
    200: Array<LiquidationReportEntryData>;
};

export type UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutResponse = UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutResponses[keyof UpdateLiquidationReportEntriesV1ReportsLiquidationSchoolIdYearMonthCategoryEntriesPutResponses];

export type GetLiquidationCategoriesV1ReportsLiquidationCategoriesGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/reports/liquidation/categories';
};

export type GetLiquidationCategoriesV1ReportsLiquidationCategoriesGetResponses = {
    /**
     * Response Get Liquidation Categories V1 Reports Liquidation Categories Get
     * Successful Response
     */
    200: {
        [key: string]: {
            [key: string]: string | boolean;
        };
    };
};

export type GetLiquidationCategoriesV1ReportsLiquidationCategoriesGetResponse = GetLiquidationCategoriesV1ReportsLiquidationCategoriesGetResponses[keyof GetLiquidationCategoriesV1ReportsLiquidationCategoriesGetResponses];

export type ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchData = {
    body: StatusChangeRequest;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}/status';
};

export type ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchError = ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchErrors[keyof ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchErrors];

export type ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchResponses = {
    /**
     * Response Change Liquidation Report Status V1 Reports Liquidation  School Id   Year   Month   Category  Status Patch
     * Successful Response
     */
    200: LiquidationReportOperatingExpenses | LiquidationReportAdministrativeExpenses | LiquidationReportSupplementaryFeedingFund | LiquidationReportClinicFund | LiquidationReportFacultyAndStudentDevFund | LiquidationReportHeFund | LiquidationReportSchoolOperationFund | LiquidationReportRevolvingFund;
};

export type ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchResponse = ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchResponses[keyof ChangeLiquidationReportStatusV1ReportsLiquidationSchoolIdYearMonthCategoryStatusPatchResponses];

export type GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetData = {
    body?: never;
    path: {
        /**
         * School Id
         */
        school_id: number;
        /**
         * Year
         */
        year: number;
        /**
         * Month
         */
        month: number;
        /**
         * Category
         */
        category: string;
    };
    query?: never;
    url: '/v1/reports/liquidation/{school_id}/{year}/{month}/{category}/valid-transitions';
};

export type GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetError = GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetErrors[keyof GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetErrors];

export type GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetResponses = {
    /**
     * Response Get Liquidation Valid Status Transitions V1 Reports Liquidation  School Id   Year   Month   Category  Valid Transitions Get
     * Successful Response
     */
    200: {
        [key: string]: string | Array<string>;
    };
};

export type GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetResponse = GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetResponses[keyof GetLiquidationValidStatusTransitionsV1ReportsLiquidationSchoolIdYearMonthCategoryValidTransitionsGetResponses];

export type UploadAttachmentEndpointV1ReportsAttachmentsUploadPostData = {
    body: BodyUploadAttachmentEndpointV1ReportsAttachmentsUploadPost;
    path?: never;
    query?: {
        /**
         * Description
         */
        description?: string | null;
    };
    url: '/v1/reports/attachments/upload';
};

export type UploadAttachmentEndpointV1ReportsAttachmentsUploadPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UploadAttachmentEndpointV1ReportsAttachmentsUploadPostError = UploadAttachmentEndpointV1ReportsAttachmentsUploadPostErrors[keyof UploadAttachmentEndpointV1ReportsAttachmentsUploadPostErrors];

export type UploadAttachmentEndpointV1ReportsAttachmentsUploadPostResponses = {
    /**
     * Successful Response
     */
    200: AttachmentUploadResponse;
};

export type UploadAttachmentEndpointV1ReportsAttachmentsUploadPostResponse = UploadAttachmentEndpointV1ReportsAttachmentsUploadPostResponses[keyof UploadAttachmentEndpointV1ReportsAttachmentsUploadPostResponses];

export type DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteData = {
    body?: never;
    path: {
        /**
         * File Urn
         */
        file_urn: string;
    };
    query?: never;
    url: '/v1/reports/attachments/{file_urn}';
};

export type DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteError = DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteErrors[keyof DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteErrors];

export type DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteResponses = {
    /**
     * Response Delete Attachment Endpoint V1 Reports Attachments  File Urn  Delete
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteResponse = DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteResponses[keyof DeleteAttachmentEndpointV1ReportsAttachmentsFileUrnDeleteResponses];

export type GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetData = {
    body?: never;
    path: {
        /**
         * File Urn
         */
        file_urn: string;
    };
    query?: never;
    url: '/v1/reports/attachments/{file_urn}';
};

export type GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetError = GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetErrors[keyof GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetErrors];

export type GetAttachmentEndpointV1ReportsAttachmentsFileUrnGetResponses = {
    /**
     * Successful Response
     */
    200: unknown;
};

export type GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostData = {
    /**
     * File Urns
     */
    body: Array<string>;
    path?: never;
    query?: never;
    url: '/v1/reports/attachments/metadata';
};

export type GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostError = GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostErrors[keyof GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostErrors];

export type GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostResponses = {
    /**
     * Response Get Attachments Metadata Endpoint V1 Reports Attachments Metadata Post
     * Successful Response
     */
    200: Array<AttachmentMetadataResponse>;
};

export type GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostResponse = GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostResponses[keyof GetAttachmentsMetadataEndpointV1ReportsAttachmentsMetadataPostResponses];

export type RootV1HealthcheckGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/healthcheck';
};

export type RootV1HealthcheckGetResponses = {
    /**
     * Response Root V1 Healthcheck Get
     * Successful Response
     */
    200: {
        [key: string]: 'Healthy';
    };
};

export type RootV1HealthcheckGetResponse = RootV1HealthcheckGetResponses[keyof RootV1HealthcheckGetResponses];

export type GetServerConfigV1AdminConfigGetData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/v1/admin/config';
};

export type GetServerConfigV1AdminConfigGetResponses = {
    /**
     * Response Get Server Config V1 Admin Config Get
     * Successful Response
     */
    200: {
        [key: string]: unknown;
    };
};

export type GetServerConfigV1AdminConfigGetResponse = GetServerConfigV1AdminConfigGetResponses[keyof GetServerConfigV1AdminConfigGetResponses];

export type UpdateServerConfigV1AdminConfigPutData = {
    body: ConfigUpdateRequest;
    path?: never;
    query?: never;
    url: '/v1/admin/config';
};

export type UpdateServerConfigV1AdminConfigPutErrors = {
    /**
     * Validation Error
     */
    422: HttpValidationError;
};

export type UpdateServerConfigV1AdminConfigPutError = UpdateServerConfigV1AdminConfigPutErrors[keyof UpdateServerConfigV1AdminConfigPutErrors];

export type UpdateServerConfigV1AdminConfigPutResponses = {
    /**
     * Response Update Server Config V1 Admin Config Put
     * Successful Response
     */
    200: {
        [key: string]: string;
    };
};

export type UpdateServerConfigV1AdminConfigPutResponse = UpdateServerConfigV1AdminConfigPutResponses[keyof UpdateServerConfigV1AdminConfigPutResponses];

export type ClientOptions = {
    baseUrl: `${string}://${string}/api` | (string & {});
};